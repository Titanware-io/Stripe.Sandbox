@using System.Collections.Generic
@using System.Linq
@using Microsoft.AspNetCore.Http
@model Stripe.Onboarding.Features.Cart.Models.Views.CheckoutPage
@{
    
}
<section x-data="{
    userId: '@Model.UserId',
    items: (@System.Text.Json.JsonSerializer.Serialize(Model.Cart.Items) || []),
    async removeFromCart(item) {
        const result = await this.$fetch.POST('@Model.CartPostbackUrl/remove', {
            userId: '@Model.UserId',
            productId: item.Id,
            quantity: 1,
        })
        this.$events.Emit('removeFromCart', result);
        if(result){
            location.reload()
        }
    },
    async clearCart() {
        await this.$fetch.DELETE('@Model.CartPostbackUrl/clear/@Model.UserId')
        location.reload()
    }
}">
    <nav>
        <ul>
            <header>
                <h1>Checkout</h1>
            </header>
        </ul>
        <ul>
            <li>
                <button @@click="clearCart()">Clear cart</button>
            </li>
        </ul>
    </nav> 
    <!-- Filters -->
    <div x-data>
        <template x-for="(item, i) in items" :key="i">
            <div>
                <!--Card-->
                <article class="dense">
                    <nav>
                        <ul>

                            <figure>
                                <img style="max-height:200px; max-width: 300px;" :src="item.Product.Image" :alt="item.Title" />
                            </figure>
                        </ul>
                   
                        <ul>

                        <div style="padding:8px; text-align: left" x-text="item.Product.Title"></div>

                        <footer>
                            <nav>
                                <ul>
                                    <li>
                                        <div x-text="`$ ${item.Product.Amount}.00`"></div>
                                    </li>
                                </ul>
                                <ul>
                                    <li>
                                        <button @@click="removeFromCart(item.Product)">Remove</button>
                                    </li>
                                </ul>
                            </nav>
                            </footer>
                        </ul>
                    </nav>
                </article>
            </div>
        </template>

        <template x-if="items == null || items.length == 0">
            <article class="flat">
                <header><strong>No products in your cart</strong></header>
            </article>
        </template>
    </div>

    <!--Card-->
    <template x-if="items.length > 0">
        <div>
        <nav>
            <header>
                <hgroup>
                    <h1>Pay by</h1>
                </hgroup>
            </header>
        </nav>
        <div class="grid">

            <template x-for="(item, i) in (@System.Text.Json.JsonSerializer.Serialize(Model.PaymentOptions) || [])" :key="i">

                <article class="dense">
                    <header>
                        <nav>
                            <strong x-text="item.Title">Hosted Page</strong>
                        </nav>
                    </header>
                    <div x-text="item.Description"></div>
                    <footer>
                        <nav>
                            <ul>
                                <li>
                                    <a :href="item.Url">Try it out</a>
                                </li>
                            </ul>
                        </nav>
                    </footer>
                </article>
            </template>
        </div>
        </div>
    </template>
</section>